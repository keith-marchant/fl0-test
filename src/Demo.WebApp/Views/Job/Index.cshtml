@model JobListViewModel
@{
    ViewData["Title"] = "Job Page";
}

<div class="text-center">
    <h2>Job List</h2>
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Jobs[0].Id)</th>
                <th>@Html.DisplayNameFor(model => model.Jobs[0].Name)</th>
                <th>@Html.DisplayNameFor(model => model.Jobs[0].Floor)</th>
                <th>@Html.DisplayNameFor(model => model.Jobs[0].Status)</th>
                <th>@Html.DisplayNameFor(model => model.Jobs[0].RoomType)</th>
                <th></th>
            </tr>
        </thead>
        @foreach(var job in Model.Jobs)
        {
            <tr class="tr-@(job.StatusEnum.ToString().ToLower())">
                <td>
                    @Html.DisplayFor(modelItem => job.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => job.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => job.Floor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => job.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => job.RoomType)
                </td>
                <td>
                    @if (job.Status.Equals("Delayed", StringComparison.InvariantCultureIgnoreCase)
               || job.Status.Equals("In Progress", StringComparison.InvariantCultureIgnoreCase))
                    {
                        <button class="button" asp-controller="Job" asp-action="Complete" asp-route-id="@job.Id">Complete</button>
                    }
                </td>
            </tr>
        }
    </table>
</div>
